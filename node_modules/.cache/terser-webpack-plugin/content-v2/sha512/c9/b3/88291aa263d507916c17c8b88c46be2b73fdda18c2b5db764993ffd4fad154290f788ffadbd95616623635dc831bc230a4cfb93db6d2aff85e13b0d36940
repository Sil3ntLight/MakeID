{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{190:function(t,e,s){\"use strict\";s.r(e);var n=s(5),a=s(1),o=s(0),i=s(57),r=s(12),c=s(11),u=s(49),l=s(18),p=s(98),h=s(15);class d extends o.Component{constructor(){super(...arguments),Object(n.a)(this,\"focusTarget\",Object(o.createRef)()),Object(n.a)(this,\"state\",{isEditing:!1,showInputValue:!1,inputPassword:\"\",inputConfirm:\"\"}),Object(n.a)(this,\"onChange\",t=>{let e=t.target;const s=e.name,n=e.value;this.setState(t=>{let e=t.inputPassword,a=t.inputConfirm;return this.props.onChange({inputPassword:e,inputConfirm:a,[s]:n}),{[s]:n}})}),Object(n.a)(this,\"toggleInterface\",()=>{this.setState(t=>({isEditing:!t.isEditing}),(function(){this.state.isEditing&&this.focusTarget.current&&this.focusTarget.current.focus()}))}),Object(n.a)(this,\"toggleMode\",()=>{this.setState(t=>({showInputValue:!t.showInputValue}))})}render(){const t=this.state,e=t.isEditing,s=t.inputPassword,n=t.inputConfirm,o=t.showInputValue,d=this.props,g=d.autoFocus,j=d.field,w=d.value,f=d.errors,b=d.warnings,x=w||\"\",O=\"ks-input-\".concat(j.path);return Object(a.jsx)(i.a,null,Object(a.jsx)(i.c,{htmlFor:O,field:j,errors:f}),Object(a.jsx)(i.b,null,e?Object(a.jsx)(l.c,{growIndexes:[0,1]},Object(a.jsx)(u.c,{autoComplete:\"off\",autoFocus:g,id:O,ref:this.focusTarget,name:\"inputPassword\",onChange:this.onChange,placeholder:\"New Password\",type:o?\"text\":\"password\",value:s}),Object(a.jsx)(u.c,{autoComplete:\"off\",autoFocus:g,id:\"\".concat(O,\"-confirm\"),name:\"inputConfirm\",onChange:this.onChange,placeholder:\"Confirm Password\",type:o?\"text\":\"password\",value:n}),Object(a.jsx)(c.a,{isActive:o,onClick:this.toggleMode,title:o?\"Hide Text\":\"Show Text\",variant:\"ghost\"},Object(a.jsx)(h.a,null,o?\"Hide Text\":\"Show Text\"),Object(a.jsx)(\"div\",{css:{width:20}},o?Object(a.jsx)(r.m,null):Object(a.jsx)(r.g,null)))):Object(a.jsx)(c.a,{id:\"\".concat(O,\"-button\"),onClick:this.toggleInterface,variant:\"ghost\"},x?\"Update Password\":\"Set Password\")),f.length?f.map(t=>{let e=t.message,s=t.data;return Object(a.jsx)(p.a,{appearance:\"danger\",key:e},e,s?\" - \".concat(JSON.stringify(s)):null)}):null,b.length?b.map(t=>{let e=t.message,s=t.data;return Object(a.jsx)(p.a,{appearance:\"warning\",key:e},e,s?\" - \".concat(JSON.stringify(s)):null)}):null)}}e.default=d}}]);","extractedComments":[]}